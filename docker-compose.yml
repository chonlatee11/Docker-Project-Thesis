services:
  mysqldb:
    container_name: mariadbcontainer
    image: "mariadb"
    restart: 'unless-stopped'
    volumes: 
      # - $HOME/database:/var/lib/mysql/
      - ./databasevol:/var/lib/mysql/
      - ./database/db/initdb/:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      SERVICE_TAGS: prod
      SERVICE_NAME: mysqldb
    networks:
      - internalnet
    ports:
      - 3306:3306
    expose:
      - 3306

  nodeappweb:
    container_name: nodewebcontainer
    build: ./nodejswebapi/.
    image: nodewebapp:v1
    restart: 'unless-stopped'
    volumes:
      # - $HOME/nodeappweb:/code
      - ./nodewebvol:/code
    ports:
      - 3000:3000
    expose:
      - 3000
    environment:
      DB_HOST: mysqldb
      DB_PORT: 3306
      DB_USER: 'devchon'
      DB_PASSWORD: 'devchon101'
      DB_NAME: mymariaDB
      DB_CONNECTION_LIMIT: 20
      SERVICE_TAGS: prod
      SERVICE_NAME: nodeappservice
      SERVER_PORT: 3000
    depends_on:
    - mysqldb
    networks:
      - internalnet

  nodeappmobile:
    container_name: nodemobilecontainer
    build: ./nodejsmobileapi/.
    image: nodemobileapp:v1
    restart: 'unless-stopped'
    volumes:
      # - $HOME/nodeappweb:/code
      - ./nodemobilevol:/code
    ports:
      - 3001:3001
    expose:
      - 3001
    environment:
      DB_HOST: mysqldb
      DB_PORT: 3306
      DB_USER: 'devchon'
      DB_PASSWORD: 'devchon101'
      DB_NAME: mymariaDB
      DB_CONNECTION_LIMIT: 20
      SERVICE_TAGS: prod
      SERVICE_NAME: nodeappservice
      SERVER_PORT: 3001
    depends_on:
      - mysqldb
    networks:
      - internalnet

  modelapp:
    container_name: modelapicontainer
    restart: 'unless-stopped'
    build: ./modelapi/.
    ports:
      - "3004:3004"
    volumes:
      # - $HOME/modelapi:/modelapi/src/
      - ./modelapivol:/modelapi/src/
    networks:
      - webproxy

networks:
  internalnet:
    driver: bridge
  webproxy:
    driver: bridge
